package c.teamtreehouse.foodieappcardview;import android.content.Intent;import android.content.res.TypedArray;import android.os.Bundle;import android.support.annotation.NonNull;import android.support.design.widget.FloatingActionButton;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.GridLayoutManager;import android.support.v7.widget.RecyclerView;import android.support.v7.widget.helper.ItemTouchHelper;import android.util.Log;import android.view.View;import android.widget.ImageView;import android.widget.Toast;import java.util.ArrayList;public class MainActivity extends AppCompatActivity {    private RecyclerView recyclerView;    private ArrayList<MealItem> mealListData;    private MealItemAdapter mealItemAdapter;    private FloatingActionButton fab;    private int gridColCount = 1;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        gridColCount = getResources().getInteger(R.integer.grid_col_count);        recyclerView = findViewById(R.id.recycler_view);        recyclerView.setLayoutManager(new GridLayoutManager(this, gridColCount));        mealListData = new ArrayList<>();        mealItemAdapter = new MealItemAdapter(this, mealListData);        recyclerView.setAdapter(mealItemAdapter);        fab =  findViewById(R.id.fab);        loadSportsData();//our method below to load the data from strings.xml        AddItem();        new ItemTouchHelper(new ItemTouchHelper                .SimpleCallback(0, ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT) {            @Override            public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder viewHolder1) {                return false;            }            @Override            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {                Toast.makeText(getApplicationContext(),"just swiper recycler view at position "+ viewHolder.getItemId(),Toast.LENGTH_LONG).show();                if (direction == ItemTouchHelper.RIGHT) {                    int position = viewHolder.getAdapterPosition();                    mealListData.remove(position);                    mealItemAdapter.notifyDataSetChanged();                }                if (direction == ItemTouchHelper.LEFT) {                    int position = viewHolder.getAdapterPosition();                    mealListData.remove(position);                    mealItemAdapter.notifyDataSetChanged();                }                // int position = viewHolder.getAdapterPosition();                //mealListData.remove(position);                //mealItemAdapter.notifyDataSetChanged();            }        }).attachToRecyclerView(recyclerView);    }    private void AddItem() {        fab.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Log.d("wtf", "fab click");                Intent intent = new Intent(MainActivity.this, addIemActivity.class);                startActivityForResult(intent, 2);            }        });    }    public void onActivityResult(int requestCode, int resultCode, Intent data) {        if (requestCode == 2) {            if (resultCode == RESULT_OK) {                String title = data.getStringExtra("titleKey");                String info = data.getStringExtra("infoKey");                String desc = data.getStringExtra("descKey");                MealItem newItem = new MealItem(title, info, R.drawable.img_filetmignon);                newItem.setDesc(desc);                mealListData.add(newItem);                mealItemAdapter.notifyDataSetChanged();            }        }    }    private void loadSportsData() {        mealListData.clear();        TypedArray mealsImages =  getResources().obtainTypedArray(R.array.meals_images);        String [] mealsTitles = getResources().getStringArray(R.array.meals_titles);        String [] mealsInfos =  getResources().getStringArray(R.array.meals_infos);        String [] mealsdetails =  getResources().getStringArray(R.array.meals_desc_array);        for(int i=0; i<mealsImages.length(); i++){            MealItem currMealItem = new MealItem(                    mealsTitles[i],                    mealsInfos[i],                    mealsImages.getResourceId(i, 0));            currMealItem.setDesc(mealsdetails[i]);            mealListData.add(currMealItem);        }        mealItemAdapter.notifyDataSetChanged();        //come back here if issues... double check        mealsImages.recycle();    }}